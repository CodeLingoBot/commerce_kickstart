<?php

/**
 * Implements hook_menu().
 */
function commerce_kickstart_menus_menu() {
  $items['admin/site-config/layout'] = array(
    'title' => 'Visual & Layout',
    'description' => 'Administer the appearance and layout of your store.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file path' => drupal_get_path('module', 'system'),
    'file' => 'system.admin.inc',
    'weight' => 150,
  );

  $items['admin/site-config'] = array(
    'title' => 'Configure site',
    'description' => 'Administer the site configuration.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file path' => drupal_get_path('module', 'system'),
    'file' => 'system.admin.inc',
    'weight' => 100,
  );

  $items['admin/site-config/advanced'] = array(
    'title' => 'Advanced settings',
    'description' => 'Administer the site configuration.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
    'file path' => drupal_get_path('module', 'system'),
    'file' => 'system.admin.inc',
    'weight' => 200,
  );

  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function commerce_kickstart_menus_menu_alter(&$items) {

  // "Products" entry point.
  if (isset($items['admin/commerce/products'])) {
    $items['admin/commerce/products']['parent'] = 'admin';
    $items['admin/commerce/products']['weight'] = -30;
  }
  // "Orders" entry point.
  if (isset($items['admin/commerce/orders'])) {
    $items['admin/commerce/orders']['parent'] = 'admin';
    $items['admin/commerce/orders']['weight'] = -20;
  }

  // Disable "Store" entry point.
  if (isset($items['admin/commerce'])) {
    $items['admin/commerce']['hidden'] = TRUE;
  }

  // "Store settings" entry point.
  if (isset($items['admin/commerce/config'])) {
    $items['admin/commerce/config']['title'] = 'Store settings';
    $items['admin/commerce/config']['parent'] = 'admin';
    $items['admin/commerce/config']['weight'] = 10;
    $items['admin/commerce/config']['options'] = array(
      'toolbar_expanded' => TRUE,
      'toolbar_break' => TRUE,
    );
  }

  if (isset($items['admin/commerce/config/product-pricing'])) {
    // Just because the default title 'Product pricing rules' is too long.
    $items['admin/commerce/config/product-pricing']['title'] = 'Pricing rules';
  }

  if (isset($items['admin/commerce/products/types'])) {
    // Hide "Product types" tab & show the link under "Store settings".
    $items['admin/commerce/products/types']['parent'] = 'admin/commerce/config';
    $items['admin/commerce/products/types']['type'] = MENU_NORMAL_ITEM;
  }
  // Show the Discounts link under "Store settings".
  if (isset($items['admin/commerce/store/discounts'])) {
    $items['admin/commerce/store/discounts']['parent'] = 'admin/commerce/config';
  }

  // - Visual & Layout subentry.
  if (isset($items['admin/site-config/layout'])) {
    $items['admin/site-config/layout']['options'] = array(
      'toolbar_expanded' => TRUE,
      'toolbar_break' => TRUE,
    );
  }

  // Move the appearance and layout entries under admin/site-config/layout.
  foreach (array('admin/appearance', 'admin/structure/block', 'admin/structure/views') as $path) {
    if (isset($items[$path])) {
      $items[$path]['parent'] = 'admin/site-config/layout';
    }
  }

  // - Site configuration subentry.
  if (isset($items['admin/site-config'])) {
    $items['admin/site-config']['options'] = array(
      'toolbar_expanded' => TRUE,
      'toolbar_break' => TRUE,
    );
  }
  // - Advanced site configuration subentry.
  if (isset($items['admin/site-config/advanced'])) {
    $items['admin/site-config/advanced']['options'] = array(
      'toolbar_expanded' => TRUE,
      'toolbar_break' => TRUE,
    );
  }

  // Move the main Drupal entry points below admin/site-config/advanced.
  foreach (array('admin/structure', 'admin/people', 'admin/modules', 'admin/config', 'admin/reports', 'admin/help', 'admin/advanced_help', 'admin/demo') as $path) {
    if (isset($items[$path])) {
      $items[$path]['parent'] = 'admin/site-config/advanced';
    }
  }
}

/**
 * Implements hook_menu_link_alter().
 *
 * Apply some link configuration stored in the router during the menu
 * rebuild process.
 */
function commerce_kickstart_menus_menu_link_alter(&$link) {
  $item = _commerce_kickstart_menu_find_router($link['link_path']);
  if ($item && isset($item['options'])) {
    if (!isset($link['options'])) {
      $link['options'] = array();
    }
    $link['options'] += $item['options'];
  }
  if ($item && isset($item['parent'])) {
    $plid = db_query('SELECT mlid FROM {menu_links} WHERE link_path = :path', array(':path' => $item['parent']))->fetchField();
    if ($plid) {
      $link['plid'] = $plid;
    }
  }
}

function _commerce_kickstart_menu_find_router($link_path) {
  $router = menu_get_router();
  $parts = explode('/', $link_path, MENU_MAX_PARTS);

  $ancestors = menu_get_ancestors($parts);
  // Add an empty router path as a fallback.
  $ancestors[] = '';
  foreach ($ancestors as $key => $router_path) {
    if (isset($router[$router_path])) {
      // Exit the loop leaving $router_path as the first match.
      break;
    }
  }

  return isset($router[$router_path]) ? $router[$router_path] : NULL;
}

/**
 * Implements hook_module_implements_alter().
 */
function commerce_kickstart_menus_module_implements_alter(&$implementations, $hook) {
  if (in_array($hook, array('menu_alter'))) {
    // Move our hook implementation to the bottom.
    $group = $implementations['commerce_kickstart_menus'];
    unset($implementations['commerce_kickstart_menus']);
    $implementations['commerce_kickstart_menus'] = $group;
  }
}

/**
 * Implements hook_views_api().
 */
function commerce_kickstart_menus_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'commerce_kickstart_menus') . '/views',
  );
}

